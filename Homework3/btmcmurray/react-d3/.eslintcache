[{"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework2/Templates/react-template/react-d3/src/index.js":"1","/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework2/Templates/react-template/react-d3/src/App.js":"2","/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework2/Templates/react-template/react-d3/src/reportWebVitals.js":"3","/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework2/Templates/react-template/react-d3/src/BarChart.js":"4","/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework3/btmcmurray/react-d3/src/index.js":"5","/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework3/btmcmurray/react-d3/src/App.js":"6","/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework3/btmcmurray/react-d3/src/reportWebVitals.js":"7","/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework3/btmcmurray/react-d3/src/BarChart.js":"8"},{"size":500,"mtime":1610928755360,"results":"9","hashOfConfig":"10"},{"size":663,"mtime":1613279818334,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610928755360,"results":"12","hashOfConfig":"10"},{"size":20779,"mtime":1613278609898,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1613282200328,"results":"14","hashOfConfig":"15"},{"size":663,"mtime":1613282200334,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1613282191509,"results":"17","hashOfConfig":"15"},{"size":20779,"mtime":1613282200331,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"8kgwua",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k4fsvj",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework2/Templates/react-template/react-d3/src/index.js",[],["37","38"],"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework2/Templates/react-template/react-d3/src/App.js",[],"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework2/Templates/react-template/react-d3/src/reportWebVitals.js",[],"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework2/Templates/react-template/react-d3/src/BarChart.js",["39","40","41","42","43","44","45","46","47","48","49","50","51"],"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework3/btmcmurray/react-d3/src/index.js",[],"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework3/btmcmurray/react-d3/src/App.js",[],"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework3/btmcmurray/react-d3/src/reportWebVitals.js",[],"/Users/blakemcmurray/Desktop/ECS272-Winter2021/Homework3/btmcmurray/react-d3/src/BarChart.js",["52","53","54","55","56","57","58","59","60","61","62","63","64"],"import React, { Component } from 'react';\nimport * as d3 from \"d3\";\nimport { axisBottom, format, line, zoom } from 'd3';\n\nclass BarChart extends Component {\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    d3.csv(this.props.data)\n      .then(csv => {\n        // log csv in browser console\n\n\n        // create data by selecting two columns from csv \n        var data = csv.map(row => {\n          return {\n            yes: Number(row['Yes Votes']),\n            no: Number(row['No Votes']),\n            passFail: row['Pass or Fail'],\n            percent: Number(row['Percent']),\n            keyword: row['Key Word'],\n            year: Number(row['Year']),\n            subject: row[\"Subject\"]\n          }\n        })\n\n        /********************************* \n       * Visualization codes start here\n       * ********************************/\n        var width = 1800;\n        var height = 400;\n        var s_width = width / 3;\n\n        var margin = { left: 60, right: 20, top: 40, bottom: 60 }\n\n        //groupby function made by Keshav Dasu (you mentioned we could use this in lecture)\n        function groupBy(objectArray, property) {\n          return objectArray.reduce(function (acc, obj) {\n            let key = obj[property]\n            if (!acc[key]) {\n              acc[key] = []\n            }\n            acc[key].push(obj)\n            return acc\n          }, {})\n        }\n\n        var groupByYear = groupBy(csv, \"Year\");\n        var groupByYear_multi = groupBy(data, \"year\")\n        var groupByMonth = groupBy(csv, \"Month\")\n\n\n\n\n        //------------------------------------------------------------------------------------\n        //formatted data for leftmost histogram\n        let formattedData = [];\n        Object.keys(groupByYear).forEach(d => {\n          let initialValue = 0;\n          let count = groupByYear[d].reduce((acc, curvalue) => acc + 1, initialValue);\n\n\n          let processedObj = {\n            year: d,\n            count: count\n          }\n          formattedData.push(processedObj);\n        });\n\n        //------------------------------------------------------------------------------------\n        //formatted data for rightmost linechart\n        let formatted_months = [];\n        Object.keys(groupByMonth).forEach(d => {\n          let initialValue = 0;\n          let count = groupByMonth[d].reduce((acc, curvalue) => acc + 1, initialValue);\n\n\n          let processedObj = {\n            month: d,\n            count: count\n          }\n          formatted_months.push(processedObj);\n        });\n\n        formattedData.sort(function (a, b) {\n          if (a.year < b.year) { return -1; }\n          if (a.year > b.year) { return 1; }\n          return 0;\n        })\n\n        var svg = d3.select('#container')\n          .append('svg')\n          .attr('width', width + 7 * margin.left + 7 * margin.right)\n          .attr('height', 2 * height + 3 * margin.top + 3 * margin.bottom)\n\n\n        var zoom_child = svg.append('g');\n\n        svg.call(d3.zoom().scaleExtent([1, 2])\n          .on(\"zoom\", t => {\n            zoom_child.attr(\"transform\", (transform = t.transform));\n          }));\n\n\n\n        var hist_by_year = zoom_child.append(\"g\")\n          .attr(\"transform\", `translate(${margin.left},${margin.top + margin.bottom})`);\n\n        hist_by_year.append('text')\n          .attr('x', (s_width / 2))\n          .attr('y', 0)\n          .attr('text-anchor', 'middle')\n          .style('font-size', '16px')\n          .style('text-decoration', 'underline')\n          .text('Number of Ballot Measures Per Year in San Francisco');\n\n        let middle = 2 * margin.left + 2 * margin.right + s_width;\n        let transform;\n\n        //6 scatter plots for multicharts\n        var multiples = zoom_child.append(\"g\")\n          .attr(\"transform\", `translate(${middle - margin.right},${margin.top + height / 2})`)\n          .attr('cursor', 'pointer')\n\n\n        multiples.append('text')\n          .attr('text-anchor', 'middle')\n          .text('Small Multiples: All Ballot Measures For Specific Years by No Votes For Each Measure')\n          .attr('x', 5 * margin.left + 2 * margin.right)\n          .attr('y', -margin.top)\n          .style('text-decoration', 'underline')\n\n        multiples.append('text')\n          .attr('text-anchor', 'middle')\n          .text('Total Ballots For Specific Year')\n          .attr('x', 5 * margin.left + 2 * margin.right)\n          .attr('y', height + 2 * margin.bottom - margin.top)\n\n        multiples.append('text')\n          .attr('text-anchor', 'middle')\n          .text('Yes Votes For Ballot')\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr('x', -height / 2)\n          .attr('y', -margin.left)\n\n        var hist_1 = multiples.append(\"g\")\n\n        let pos_upper_right = s_width / 2 + margin.right\n\n        var hist_2 = multiples.append(\"g\")\n          .attr(\"transform\", `translate(${pos_upper_right},0)`);\n\n        let pos_middle_y = height / 3;\n\n        var hist_3 = multiples.append(\"g\")\n          .attr(\"transform\", `translate(0,${pos_middle_y})`);\n\n        var hist_4 = multiples.append(\"g\")\n          .attr(\"transform\", `translate(${pos_upper_right},${pos_middle_y})`);\n\n        let pos_bottom_y = 2 * pos_middle_y + margin.top;\n\n        var hist_5 = multiples.append(\"g\")\n          .attr(\"transform\", `translate(0,${pos_bottom_y})`);\n\n        var hist_6 = multiples.append(\"g\")\n          .attr(\"transform\", `translate(${pos_upper_right},${pos_bottom_y})`);\n\n        let far_right = 2 * s_width + 2 * margin.left + 2 * margin.right;\n\n        //------------------------------------------------------------------------------------\n        //group object for line chart\n        var lineChart = zoom_child.append(\"g\")\n          .attr(\"transform\", `translate(${far_right - margin.right},${margin.top + margin.bottom})`);\n\n        lineChart.append('text')\n          .attr('text-anchor', 'middle')\n          .text('Months That Ballots Were Created by Total Number of Ballots')\n          .attr('x', s_width - 2 * margin.left - margin.right)\n          .attr('y', -margin.top)\n          .style('text-decoration', 'underline')\n        //scale for distribution of yes scores\n        var x_yes_dist = d3.scaleBand()\n          .domain(formattedData.map(d => {\n            return d.year\n          }))\n          .range([0, s_width - margin.right]);\n\n        var y_yes_dist = d3.scaleLinear()\n          .domain([0, 40])\n          .range([height, 0]);\n\n        /*Axes for small multiples*/\n\n        //------------------------------------------------upper left------------------------------------------------\n        var x_1 = d3.scaleLinear()\n          .domain([0, groupByYear_multi[1972].length])\n          .range([0, width / 6]);\n\n        var y_1 = d3.scaleLinear()\n          .domain([0, d3.max(data, d => d.yes)])\n          .range([height, 2 * height / 3]);\n\n        //------------------------------------------------upper right------------------------------------------------\n        var x_2 = d3.scaleLinear()\n          .domain([0, groupByYear_multi[2010].length])\n          .range([0, width / 6]);\n\n        var y_2 = d3.scaleLinear()\n          .domain([0, d3.max(data, d => d.yes)])\n          .range([height, 2 * height / 3]);\n\n        //------------------------------------------------middle left------------------------------------------------\n        var x_3 = d3.scaleLinear()\n          .domain([0, groupByYear_multi[1970].length])\n          .range([0, width / 6]);\n\n        var y_3 = d3.scaleLinear()\n          .domain([0, d3.max(data, d => d.yes)])\n          .range([height, 2 * height / 3]);\n\n        //------------------------------------------------middle right------------------------------------------------\n        var x_4 = d3.scaleLinear()\n          .domain([0, groupByYear_multi[1975].length])\n          .range([0, width / 6]);\n\n        var y_4 = d3.scaleLinear()\n          .domain([0, d3.max(data, d => d.yes)])\n          .range([height, 2 * height / 3]);\n\n        //------------------------------------------------lower left------------------------------------------------\n        var x_5 = d3.scaleLinear()\n          .domain([0, groupByYear_multi[1988].length])\n          .range([0, width / 6]);\n\n        var y_5 = d3.scaleLinear()\n          .domain([0, d3.max(data, d => d.yes)])\n          .range([height, 2 * height / 3]);\n\n        //------------------------------------------------lower right------------------------------------------------\n        var x_6 = d3.scaleLinear()\n          .domain([0, groupByYear_multi[2008].length])\n          .range([0, width / 6]);\n\n        var y_6 = d3.scaleLinear()\n          .domain([0, d3.max(data, d => d.yes)])\n          .range([height, 2 * height / 3]);\n\n\n        //------------------------------------------------------------------------------------------------\n        var month = d3.scaleBand()\n          .domain(formatted_months.map(d => d.month))\n          .range([0, s_width])\n\n        var no_votes = d3.scaleLinear()\n          .domain([0, d3.max(formatted_months, d => d.count)])\n          .range([height, 0])\n\n\n        //------------------------------------------------------------------------------------------------\n        //legend for multiples\n        const colorScale = d3.scaleOrdinal()\n          .domain([\"1972\", \"2010\", \"1970\", \"1975\", \"1988\", \"2008\"])\n          .range([\"darkblue\", \"green\", \"orange\", \"purple\", \"red\", \"pink\"])\n\n        var legend = zoom_child.append(\"g\")\n          .attr(\"transform\", `translate(${width / 2},${margin.top + margin.bottom})`);\n\n\n        var circles = legend.selectAll('circle')\n          .data(colorScale.domain())\n          .join('circle')\n          .attr('r', 12)\n          .attr('fill', d => { return colorScale(d) })\n          .attr('cx', (d, i) => i * 4 * (margin.right))\n          .attr('cy', 0);\n\n        legend.append('text')\n          .attr('text-anchor', 'middle')\n          .text('1972')\n          .attr('x', 0)\n          .attr('y', margin.top)\n\n        legend.append('text')\n          .attr('text-anchor', 'middle')\n          .text('2010')\n          .attr('x', 4 * (margin.right))\n          .attr('y', margin.top)\n\n        legend.append('text')\n          .attr('text-anchor', 'middle')\n          .text('1970')\n          .attr('x', 8 * (margin.right))\n          .attr('y', margin.top)\n\n        legend.append('text')\n          .attr('text-anchor', 'middle')\n          .text('1975')\n          .attr('x', 12 * (margin.right))\n          .attr('y', margin.top)\n\n        legend.append('text')\n          .attr('text-anchor', 'middle')\n          .text('1988')\n          .attr('x', 16 * (margin.right))\n          .attr('y', margin.top)\n\n        legend.append('text')\n          .attr('text-anchor', 'middle')\n          .text('2008')\n          .attr('x', 20 * (margin.right))\n          .attr('y', margin.top)\n\n\n        hist_by_year.selectAll('rect')\n          .data(formattedData)\n          .join('rect')\n          .attr('width', (s_width - margin.right) / formattedData.length)\n          .attr('fill', 'steelblue')\n          .attr('x', d => x_yes_dist(d.year))\n          .attr('y', d => y_yes_dist(d.count))\n          .transition()\n          .duration(2000)\n          .attr('height', d => {\n            return (height - y_yes_dist(d.count));\n          })\n          .attr('class', 'circ')\n\n        hist_by_year.selectAll('rect')\n          .append('title')\n          .text(d => d.year)\n\n        //----------------------------------------------------------------------\n        var upper_left = hist_1.selectAll('circle')\n          .data(groupByYear_multi[1972])\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'darkblue')\n          .attr('cx', (d, i) => {\n            return ((width / 6) / groupByYear[1972].length + i * (width / 6) / groupByYear[1972].length);\n          })\n          .attr('cy', d => height - y_1(d3.max(data, d => d.yes) - d.yes))\n          .attr('stroke', 'gray')\n        //----------------------------------------------------------------------\n        var upper_right = hist_2.selectAll('circle')\n          .data(groupByYear_multi[2010])\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'green')\n          .attr('cx', function (d, i) { return (margin.left + (width / 6) / groupByYear[2010].length + i * (width / 6) / groupByYear[2010].length) })\n          .attr('cy', d => height - y_2(d3.max(data, d => d.yes) - d.yes))\n        //----------------------------------------------------------------------\n        var middle_left = hist_3.selectAll('circle')\n          .data(groupByYear_multi[1970])\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'orange')\n          .attr('cx', (d, i) => {\n            return ((width / 6) / groupByYear[1970].length + i * (width / 6) / groupByYear[1970].length);\n          })\n          .attr('cy', d => height - y_3(d3.max(data, d => d.yes) - d.yes))\n        //----------------------------------------------------------------------\n        var middle_right = hist_4.selectAll('circle')\n          .data(groupByYear_multi[1975])\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'purple')\n          .attr('cx', (d, i) => {\n            return (margin.left + (width / 6) / groupByYear[1975].length + i * (width / 6) / groupByYear[1975].length);\n          })\n          .attr('cy', d => height - y_4(d3.max(data, d => d.yes) - d.yes))\n\n        //----------------------------------------------------------------------\n        var bot_left = hist_5.selectAll('circle')\n          .data(groupByYear_multi[1988])\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'yellow')\n          .attr('cx', (d, i) => {\n            return ((width / 6) / groupByYear[1988].length + i * (width / 6) / groupByYear[1988].length);\n          })\n          .attr('cy', d => height - y_5(d3.max(data, d => d.yes) - d.yes))\n        //----------------------------------------------------------------------\n        var bot_right = hist_6.selectAll('circle')\n          .data(groupByYear_multi[2008])\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'pink')\n          .attr('cx', (d, i) => {\n            return (margin.left + (width / 6) / groupByYear[2008].length + i * (width / 6) / groupByYear[2008].length);\n          })\n          .attr('cy', d => height - y_6(d3.max(data, d => d.yes) - d.yes))\n\n        //invokes class from index.css for hover\n        multiples.selectAll('g')\n          .selectAll('circle')\n          .attr('class', 'circ')\n\n        multiples.selectAll('g')\n          .selectAll('circle')\n          .append('title')\n          .text(d => d.subject)\n\n        //----------------------------------------------------------------------\n\n\n        var dots = lineChart.selectAll('circle')\n          .data(formatted_months)\n          .join('circle')\n          .attr('r', 5)\n          .attr('fill', 'silver')\n          .attr('cx', d => month(d.month))\n          .attr('cy', d => no_votes(d.count))\n          .attr(\"transform\", (d, i) => `translate(${margin.right + 3 * margin.left}, 0)`)\n\n        var lines = lineChart\n          .append('path')\n          .datum(formatted_months)\n          .attr('fill', 'none')\n          .attr(\"stroke\", \"silver\")\n          .attr('stroke-width', 1.5)\n          .attr('d', line()\n            .x(function (d) { return month(d.month) })\n            .y(function (d) { return no_votes(d.count) }))\n          .attr(\"transform\", (d, i) => `translate(${margin.right + 3 * margin.left}, 0)`)\n\n        //axes for first \n        hist_1.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(0, ${height / 3})`)\n          .call(d3.axisBottom(x_1))\n\n        hist_1.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(0, ${-2 * height / 3})`)\n          .call(d3.axisLeft(y_1).ticks(5))\n\n\n        //----------------------------------------------------------------------\n        hist_2.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(${margin.left}, ${height / 3})`)\n          .call(d3.axisBottom(x_2))\n\n        hist_2.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(${margin.left}, ${-2 * height / 3})`)\n          .call(d3.axisLeft(y_2).ticks(5))\n        //----------------------------------------------------------------------\n        hist_3.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(0, ${height / 3 - margin.top + margin.bottom})`)\n          .call(d3.axisBottom(x_3))\n\n        hist_3.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(0, ${-2 * height / 3 - margin.top + margin.bottom})`)\n          .call(d3.axisLeft(y_3).ticks(5))\n\n\n        //----------------------------------------------------------------------\n        hist_4.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(${margin.left}, ${height / 3 - margin.top + margin.bottom})`)\n          .call(d3.axisBottom(x_4))\n\n\n\n        hist_4.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(${margin.left}, ${-2 * height / 3 - margin.top + margin.bottom})`)\n          .call(d3.axisLeft(y_4).ticks(5))\n\n        //----------------------------------------------------------------------\n        hist_5.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(0, ${height / 3 + margin.bottom - margin.top - 20})`)\n          .call(d3.axisBottom(x_5).ticks(7))\n\n\n        hist_5.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(0, ${-2 * height / 3 - margin.top + margin.bottom - 20})`)\n          .call(d3.axisLeft(y_5).ticks(5))\n\n        //----------------------------------------------------------------------\n        hist_6.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(${margin.left}, ${height / 3 - margin.top + margin.bottom - 20})`)\n          .call(d3.axisBottom(x_6))\n\n        hist_6.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(${margin.left}, ${-2 * height / 3 - margin.top + margin.bottom - 20})`)\n          .call(d3.axisLeft(y_6).ticks(5))\n\n\n        //----------------------------------------------------------------------\n\n        var x_axis = hist_by_year.append(\"g\");\n\n        x_axis.attr(\"transform\", (d, i) => `translate(0, ${height})`)\n          .call(d3.axisBottom(x_yes_dist).tickValues(x_yes_dist.domain()\n            .filter((d, i) => { return !(i % 5) })));\n\n        hist_by_year.append('text')\n          .attr('text-anchor', 'middle')\n          .text('Year')\n          .attr('x', s_width / 2)\n          .attr('y', height + margin.top)\n\n        // y axis\n        hist_by_year.append(\"g\")\n          .call(d3.axisLeft(y_yes_dist))\n          .append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"x\", - height / 2 + 20)\n          .attr(\"y\", -2.5 * margin.right)\n          .attr(\"dy\", \"2em\")\n          .attr(\"text-anchor\", \"end\")\n          .text('Number of Ballots')\n\n\n        lineChart.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(${2 * margin.left + 2 * margin.right}, ${height})`)\n          .call(d3.axisBottom(month))\n          .attr(\"fill\", \"#000\")\n          .attr(\"x\", 0)\n          .attr('y', margin.bottom)\n          .attr(\"dy\", \"2em\")\n          .append('text')\n          .attr(\"x\", s_width / 2)\n          .attr(\"y\", margin.top)\n          .text('Month');\n\n        lineChart.append(\"g\")\n          .attr(\"transform\", (d, i) => `translate(${2 * margin.left + 2 * margin.right}, 0)`)\n          .call(d3.axisLeft(no_votes))\n          .append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(\"transform\", \"rotate(-90)\")\n          .attr(\"x\", -s_width / 6 - margin.top)\n          .attr(\"y\", - margin.left + margin.right)\n          .attr(\"dy\", \"0.71em\")\n          .attr(\"text-anchor\", \"end\")\n          .text('Number of Ballots Across All Years')\n\n        //--------------------------zooming--------------------------------------------------\n\n\n\n\n        //------------------------------------------------------------------------------------\n        let reveal = path => path.transition()\n          .duration(5000)\n          .ease(d3.easeLinear)\n          .attrTween(\"stroke-dasharray\", function () {\n            const length = this.getTotalLength();\n            return d3.interpolate(`0,${length}`, `${length},${length}`);\n          })\n\n        lineChart.select('path').call(reveal)\n\n\n        d3.select(\"#sortHistogram\").on('click', function () {\n\n          formattedData = formattedData.sort((a, b) => (a.count < b.count) ? 1 : -1);\n          x_yes_dist.domain(formattedData.map(d => {\n            return d.year;\n          }));\n\n          hist_by_year.selectAll('rect')\n            .transition()\n            .duration(500)\n            .attr('x', d => x_yes_dist(d.year))\n\n        })\n\n\n\n\n      });\n\n  }\n\n  render() {\n    return <div id={\"#\" + this.props.id\n    } ></div >\n  }\n}\n\nexport default BarChart;",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":3,"column":22,"nodeType":"71","messageId":"72","endLine":3,"endColumn":28},{"ruleId":"69","severity":1,"message":"74","line":3,"column":36,"nodeType":"71","messageId":"72","endLine":3,"endColumn":40},{"ruleId":"69","severity":1,"message":"75","line":104,"column":43,"nodeType":"71","messageId":"72","endLine":104,"endColumn":52},{"ruleId":"69","severity":1,"message":"76","line":273,"column":13,"nodeType":"71","messageId":"72","endLine":273,"endColumn":20},{"ruleId":"69","severity":1,"message":"77","line":337,"column":13,"nodeType":"71","messageId":"72","endLine":337,"endColumn":23},{"ruleId":"69","severity":1,"message":"78","line":348,"column":13,"nodeType":"71","messageId":"72","endLine":348,"endColumn":24},{"ruleId":"69","severity":1,"message":"79","line":356,"column":13,"nodeType":"71","messageId":"72","endLine":356,"endColumn":24},{"ruleId":"69","severity":1,"message":"80","line":366,"column":13,"nodeType":"71","messageId":"72","endLine":366,"endColumn":25},{"ruleId":"69","severity":1,"message":"81","line":377,"column":13,"nodeType":"71","messageId":"72","endLine":377,"endColumn":21},{"ruleId":"69","severity":1,"message":"82","line":387,"column":13,"nodeType":"71","messageId":"72","endLine":387,"endColumn":22},{"ruleId":"69","severity":1,"message":"83","line":410,"column":13,"nodeType":"71","messageId":"72","endLine":410,"endColumn":17},{"ruleId":"69","severity":1,"message":"84","line":419,"column":13,"nodeType":"71","messageId":"72","endLine":419,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":3,"column":22,"nodeType":"71","messageId":"72","endLine":3,"endColumn":28},{"ruleId":"69","severity":1,"message":"74","line":3,"column":36,"nodeType":"71","messageId":"72","endLine":3,"endColumn":40},{"ruleId":"69","severity":1,"message":"75","line":104,"column":43,"nodeType":"71","messageId":"72","endLine":104,"endColumn":52},{"ruleId":"69","severity":1,"message":"76","line":273,"column":13,"nodeType":"71","messageId":"72","endLine":273,"endColumn":20},{"ruleId":"69","severity":1,"message":"77","line":337,"column":13,"nodeType":"71","messageId":"72","endLine":337,"endColumn":23},{"ruleId":"69","severity":1,"message":"78","line":348,"column":13,"nodeType":"71","messageId":"72","endLine":348,"endColumn":24},{"ruleId":"69","severity":1,"message":"79","line":356,"column":13,"nodeType":"71","messageId":"72","endLine":356,"endColumn":24},{"ruleId":"69","severity":1,"message":"80","line":366,"column":13,"nodeType":"71","messageId":"72","endLine":366,"endColumn":25},{"ruleId":"69","severity":1,"message":"81","line":377,"column":13,"nodeType":"71","messageId":"72","endLine":377,"endColumn":21},{"ruleId":"69","severity":1,"message":"82","line":387,"column":13,"nodeType":"71","messageId":"72","endLine":387,"endColumn":22},{"ruleId":"69","severity":1,"message":"83","line":410,"column":13,"nodeType":"71","messageId":"72","endLine":410,"endColumn":17},{"ruleId":"69","severity":1,"message":"84","line":419,"column":13,"nodeType":"71","messageId":"72","endLine":419,"endColumn":18},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'axisBottom' is defined but never used.","Identifier","unusedVar","'format' is defined but never used.","'zoom' is defined but never used.","'transform' is assigned a value but never used.","'circles' is assigned a value but never used.","'upper_left' is assigned a value but never used.","'upper_right' is assigned a value but never used.","'middle_left' is assigned a value but never used.","'middle_right' is assigned a value but never used.","'bot_left' is assigned a value but never used.","'bot_right' is assigned a value but never used.","'dots' is assigned a value but never used.","'lines' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]